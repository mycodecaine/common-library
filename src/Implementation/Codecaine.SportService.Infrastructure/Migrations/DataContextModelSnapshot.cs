// <auto-generated />
using System;
using Codecaine.SportService.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Codecaine.SportService.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Codecaine.SportService.Domain.Entities.PlayerPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SportVariantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SportVariantId");

                    b.ToTable("PlayerPosition");
                });

            modelBuilder.Entity("Codecaine.SportService.Domain.Entities.PopularInCountry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.Property<Guid>("SportVariantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SportVariantId");

                    b.ToTable("PopularInCountry");
                });

            modelBuilder.Entity("Codecaine.SportService.Domain.Entities.SportType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SportTypes", (string)null);
                });

            modelBuilder.Entity("Codecaine.SportService.Domain.Entities.SportVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsOlympic")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("SportTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SportTypeId");

                    b.ToTable("SportVariants", (string)null);
                });

            modelBuilder.Entity("Codecaine.SportService.Domain.Entities.PlayerPosition", b =>
                {
                    b.HasOne("Codecaine.SportService.Domain.Entities.SportVariant", null)
                        .WithMany("PlayerPositions")
                        .HasForeignKey("SportVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Codecaine.SportService.Domain.Entities.PopularInCountry", b =>
                {
                    b.HasOne("Codecaine.SportService.Domain.Entities.SportVariant", null)
                        .WithMany("PopularInCountries")
                        .HasForeignKey("SportVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Codecaine.SportService.Domain.Entities.SportVariant", b =>
                {
                    b.HasOne("Codecaine.SportService.Domain.Entities.SportType", "SportType")
                        .WithMany()
                        .HasForeignKey("SportTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Codecaine.SportService.Domain.ValueObjects.SportRule", "Rules", b1 =>
                        {
                            b1.Property<Guid>("SportVariantId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("Duration")
                                .HasColumnType("int");

                            b1.Property<int?>("MaxScore")
                                .HasColumnType("int");

                            b1.Property<int>("PlayerCount")
                                .HasColumnType("int");

                            b1.Property<string>("ScoringSystem")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("SportVariantId");

                            b1.ToTable("SportVariants");

                            b1.WithOwner()
                                .HasForeignKey("SportVariantId");
                        });

                    b.Navigation("Rules")
                        .IsRequired();

                    b.Navigation("SportType");
                });

            modelBuilder.Entity("Codecaine.SportService.Domain.Entities.SportVariant", b =>
                {
                    b.Navigation("PlayerPositions");

                    b.Navigation("PopularInCountries");
                });
#pragma warning restore 612, 618
        }
    }
}
